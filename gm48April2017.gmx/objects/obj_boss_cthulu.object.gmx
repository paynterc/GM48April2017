<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cthulu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_deadly</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = ST_CTHULU_WAIT;
image_speed = .15;

ttc_count1 = 100;
var pmod = global.scale/2;
var ttc;
ttcls1 = noone;
for(var i=0;i&lt;ttc_count1;i++){
    ttc = instance_create( x + global.scale*4 + global.scale/2, y - global.scale/2, obj_cthulu_ttcl);
    ttcls1 = scr_push_array(ttcls1,ttc);
}


ttcls2 = noone;
for(var i=0;i&lt;ttc_count1;i++){
    ttc = instance_create( x - global.scale*4 - (global.scale/2), y - global.scale/2, obj_cthulu_ttcl);

    ttcls2 = scr_push_array(ttcls2,ttc);
}



x1 =  x + (global.scale*4) + (global.scale/2);
y1 = y+global.scale*2 + (global.scale/2);
ttcls3 = noone;
for(var i=0;i&lt;ttc_count1;i++){
    ttc = instance_create( x1, y1, obj_cthulu_ttcl);

    ttcls3 = scr_push_array(ttcls3,ttc);
}

x1 =  x - (global.scale*4) - (global.scale/2);
y1 = y+global.scale*2 + (global.scale/2);
ttcls4 = noone;
for(var i=0;i&lt;ttc_count1;i++){
    ttc = instance_create( x1, y1, obj_cthulu_ttcl);

    ttcls4 = scr_push_array(ttcls4,ttc);
}


x1 =  x + (global.scale*2) + (global.scale/2);
y1 = y + global.scale * 4 + (global.scale/2);
ttcls5 = noone;
for(var i=0;i&lt;ttc_count1;i++){
    ttc = instance_create( x1, y1, obj_cthulu_ttcl);
    ttcls5 = scr_push_array(ttcls5,ttc);
}

x1 =  x - (global.scale*2) - (global.scale/2);
y1 = y + global.scale * 4 + (global.scale/2);
ttcls6 = noone;
for(var i=0;i&lt;ttc_count1;i++){
    ttc = instance_create( x1, y1, obj_cthulu_ttcl);
    ttcls6 = scr_push_array(ttcls6,ttc);
}

x1 =  x - (global.scale*2) - (global.scale/2);
y1 = y - global.scale * 3 - (global.scale/2);
ttcls7 = noone;
for(var i=0;i&lt;ttc_count1;i++){
    ttc = instance_create( x1, y1, obj_cthulu_ttcl);
    ttcls7 = scr_push_array(ttcls7,ttc);
}

x1 =  x + (global.scale*2) + (global.scale/2);
y1 = y - global.scale * 3 - (global.scale/2);
ttcls8 = noone;
for(var i=0;i&lt;ttc_count1;i++){
    ttc = instance_create( x1, y1, obj_cthulu_ttcl);
    ttcls8 = scr_push_array(ttcls8,ttc);
}

// Gems

instance_create(x+global.scale*11 + pmod, y+global.scale*1 + pmod,obj_gem);
instance_create(x-global.scale*11 - pmod, y+global.scale*1 + pmod,obj_gem);

instance_create(x+global.scale*10 + pmod,y-global.scale*2 - pmod,obj_gem);
instance_create(x-global.scale*10 - pmod,y-global.scale*2 - pmod,obj_gem);
instance_create(x+global.scale*10 + pmod,y+global.scale*4 + pmod,obj_gem);
instance_create(x-global.scale*10 - pmod,y+global.scale*4 + pmod,obj_gem);

instance_create(x+global.scale*4 + pmod,y+global.scale*11 + pmod,obj_gem);
instance_create(x-global.scale*4 - pmod,y+global.scale*11 + pmod,obj_gem);
instance_create(x+global.scale*4 + pmod,y-global.scale*10 - pmod,obj_gem);
instance_create(x-global.scale*4 - pmod,y-global.scale*10 - pmod,obj_gem);

instance_create(x+global.scale*8 + pmod,y+global.scale*9 + pmod,obj_gem);
instance_create(x-global.scale*8 - pmod,y+global.scale*9 + pmod,obj_gem);
instance_create(x+global.scale*8 + pmod,y-global.scale*7 - pmod,obj_gem);
instance_create(x-global.scale*8 - pmod,y-global.scale*7 - pmod,obj_gem);


ttcl_speed = 16;
ttcl_frequency = 3;
ttcl_spacing = .05;
ttcl_index = 0;

alarm[1]=room_speed * ttcl_frequency;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Launch Tentacles 2

if(state==ST_CTHULU_TENTACLES){
    
    var ttc = ttcls5[ttcl_index];
    if(instance_exists(ttc)){   
        with(ttc){
            path_start(pth_cth5,other.ttcl_speed,path_action_stop,0);
        }
    }
    
    ttc = ttcls6[ttcl_index];
    if(instance_exists(ttc)){   
        with(ttc){
            path_start(pth_cth6,other.ttcl_speed,path_action_stop,0);
        }
    }
    
    ttc = ttcls7[ttcl_index];
    if(instance_exists(ttc)){   
        with(ttc){
            path_start(pth_cth7,other.ttcl_speed,path_action_stop,0);
        }
    }
    
    ttc = ttcls8[ttcl_index];
    if(instance_exists(ttc)){   
        with(ttc){
            path_start(pth_cth8,other.ttcl_speed,path_action_stop,0);
        }
    }
    
    
    ttcl_index++;
    
    if(ttcl_index&gt;=array_length_1d(ttcls1)){
        state=ST_CTHULU_WAIT;
        ttcl_index=0;
        alarm[1]=room_speed * ttcl_frequency;
    }else{
        alarm[4]=room_speed * ttcl_spacing;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Launch tentacle
if(state==ST_CTHULU_TENTACLES){
    
    var ttc = ttcls1[ttcl_index];
    if(instance_exists(ttc)){   
        with(ttc){
            path_start(pth_cth1,other.ttcl_speed,path_action_stop,0);
        }
    }


    ttc = ttcls2[ttcl_index];
    if(instance_exists(ttc)){   
        with(ttc){
            path_start(pth_cth2,other.ttcl_speed,path_action_stop,0);
        }
    }

    ttc = ttcls3[ttcl_index];
    if(instance_exists(ttc)){   
        with(ttc){
            path_start(pth_cth3,other.ttcl_speed,path_action_stop,0);
        }
    }

    
    ttc = ttcls4[ttcl_index];
    if(instance_exists(ttc)){   
        with(ttc){
            path_start(pth_cth4,other.ttcl_speed,path_action_stop,0);
        }
    }

    
    
    ttcl_index++;
    
    if(ttcl_index&gt;=array_length_1d(ttcls1)){
        state=ST_CTHULU_WAIT;
        ttcl_index=0;
        alarm[2]=room_speed * ttcl_frequency;
    }else{
        alarm[3]=room_speed * ttcl_spacing;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// TENTACLES 2

state = ST_CTHULU_TENTACLES;
alarm[4]=room_speed * ttcl_spacing;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// TENTACLES!
state = ST_CTHULU_TENTACLES;
alarm[3]=room_speed * ttcl_spacing;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Execute state code
switch (state)
{

    case ST_CTHULU_WAIT: scr_cthulu_wait(); break;
    case ST_CTHULU_WARNING: scr_cthulu_warning(); break;
    case ST_CTHULU_TENTACLES: scr_cthulu_tentacles(); break;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
