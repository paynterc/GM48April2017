<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
selected = 0;
buttons = noone;
show=0;
depth=-100000;
buttons[0,0]="TRY AGAIN";
buttons[0,1]="scr_play";

buttons[1,0]="QUIT";
buttons[1,1]="scr_quit";

/***
buttons[1,0]="OPTIONS";
buttons[1,1]="scr_nav,rm_menu_options";
***/

fnt = fnt_menus;

draw_set_font(fnt);
fnt_height = string_height("XXX");
spacing = fnt_height / 2;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// User input
if(scr_user_input(INPUT_MENU_OPTION_NEXT)){
    selected++;
}else if(scr_user_input(INPUT_MENU_OPTION_PREV)){
    selected--;
}

if(selected&gt;=array_height_2d(buttons)){
    selected = selected&gt;=array_height_2d(buttons);
}else if(selected&lt;0){
    selected = 0;
}

if(scr_user_input(INPUT_MENU_OPTION_SELECT)){
    if(selected &gt;=0 &amp;&amp; selected &lt; array_height_2d(buttons)){
        scr_script_parse(buttons[selected,1]);
    }   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw buttons
if(show){
    yy = y;
    xx = x;
    draw_set_halign(fa_center);
    for(var i = 0; i &lt; array_height_2d(buttons); i++){
        if(i==selected){
            draw_set_color(c_white);
        }else{
            draw_set_color(c_gray);
        }
        draw_text( xx, yy, string(buttons[i,0]) );
        yy += fnt_height + spacing;    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
